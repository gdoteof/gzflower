<?php
/**
 * Implements hook_menu().
 */
function gzflower_menu() {
  $items['admin/config/gzflower'] = array(
    'page callback' => 'gzflower_config_page',
    'access arguments' => array('Administer site configuration'),
    'title' => 'gzflower config',
  );
  $items['user/%user/flower/%gzflower_quiz'] = array(
    'page callback' => 'gzflower_quiz_page',
    'access arguments' => array('access content'),
    'page arguments' => array(1,3),
    'type' => MENU_CALLBACK,
  );
  $items['user/%user/flower/%gzflower_quiz/result'] = array(
    'page callback' => 'gzflower_quiz_result_page',
    'access arguments' => array('access content'),
    'page arguments' => array(1,3),
    'type' => MENU_CALLBACK,
  );
  $items['user/%user/flower'] = array(
    'page callback' => 'gzflower_page',
    'access arguments' => array('access content'),
    'title' => 'Profile Shape',
    'page arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

function gzflower_config_page(){
  return 'gz flower config holder';
}


function gzflower_quiz_result_page($account, $quiz){
  module_load_include('inc', 'gzflower', 'gzflower.results');
  $q = $quiz;
  $quiz_num = $quiz['number'];
  $flower_data = _gzflower_load_flower_data($account);
  $r = $flower_data[$quiz_num];
  if(!isset($flower_data[$quiz_num])){
    drupal_goto('user/' . $account->uid . '/flower'); 
  }
  else{
    $output = '';
    $output .= "<div class='quiz-result' id='quiz-result-$quiz_num>";
    $output .= "<div class='quiz-title'>"  . $q['title'] . "</div>";
    $output .= "<div class='quiz-result'>" . $r['description'] . "</div>";
    $output .= "</div>";
  }
  $output .= '<div class="back-to-profile-container">' . l('See your profile shape!', 'user/' . $account->uid . '/flower') .'</div>';
  return $output;
}


function gzflower_page($account){
  module_load_include('inc', 'gzflower', 'gzflower.quizzes');
  if (!(($library = libraries_detect('d3')) && !empty($library['installed']))) {
    drupal_set_message("Please install D3 (http://www.d3js.org/) into the libraries folder (d3.min.js)", "error");
    return "error";
  }
  global $user;


  $flower_data = _gzflower_load_flower_data($account);
  if(!$flower_data){ $flower_data = array(); }
  $quizzes = _gzflower_get_quizzes();

  $path = libraries_get_path('d3');
  drupal_add_js(libraries_get_path('d3') . '/d3.min.js');
  drupal_add_js(drupal_get_path('module', 'gzflower') . '/gzflower.js');
  drupal_add_js(array('gzflower'=> array('flower_data'=>$flower_data)), 'setting');

  dpm($flower_data);
  $output = '';
  $output .= '<div id="gzflower-canvas"></div>';
  $output .= '<div id="quiz-results-container">';
  $output .= '<span id="quiz-results-header">The quizzes you have taken so far as resulted in these identity aspects...</span>';
  ksort($flower_data);  //flower data is naturally in the order users took the quizzes, lets put them in order
  foreach($flower_data as $quiz_num => $quiz_result){
    if(isset($quizzes[$quiz_num - 1])){
      $q = $quizzes[$quiz_num -1];
      $r = $flower_data[$quiz_num];
      $output .= "<div class='quiz-result' id='quiz-result-$quiz_num>";
      $output .= "<div class='quiz-title'>" . "#$quiz_num: ". $q['title'] . "</div>";
      $output .= "<div class='quiz-result'>" . $r['description'] . "</div>";
      $output .= "</div>";
    }
  }
  $output .= '</div>'; //end quiz-results-container
  if($user->uid != $account->uid){
    //Not current user's profile so they can't take the user's test
    return $output;
  }
  foreach($quizzes as $key => $quiz){
    $output .= '<div class="quiz-description-container">';
    $output .=  '<div class="quiz-title">'       . l($quiz['title'], 'user/'. $user->uid .'/flower/' . ($key +1)) . '</div>';
    $output .=  '<div class="quiz-description">' . $quiz['description'] . '</div>';
    $output .= '</div>';
  }
  return $output;

}

function gzflower_quiz_page($account, $quiz){
  global $user;
  if(!$quiz){ return drupal_not_found(); }
  if($account->uid != $user->uid){
    //Cannot take a quiz for someone else!
    drupal_access_denied();
  }
  drupal_set_title($quiz['title']);
  $out = '';
  $out .= '<div class="quiz-description">' . $quiz['description'] . '</div>';
  $form = drupal_get_form('gzflower_quiz_form', $quiz);
  $out .= drupal_render($form);
  return $out;
}

function gzflower_quiz_load($quiz_number){
  if(!is_numeric($quiz_number) || $quiz_number > 12){
    return NULL;
  }
  module_load_include('inc', 'gzflower', 'gzflower.quizzes');
  $quizzes = _gzflower_get_quizzes();
  return $quizzes[$quiz_number -1];
}

function gzflower_quiz_form($form, &$form_state, $quiz){
  $form = array();
  $form['quiz_num'] = array(
    '#type' => 'hidden',
    '#value' => $quiz['number'],
  );
  $form['questions'] = array(
    '#type' => 'fieldset',
    '#collapsible' => false,
    '#tree' => true,
  );
  foreach($quiz['questions'] as $key => $question){
    $form['questions'][$key] = array(
      '#type' => 'radios',
      '#title' => $question['question'],
      '#options' => $question['answers'], 
      '#required' => true,
    );
  }
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Complete',

  );
  return $form;
}

function gzflower_quiz_form_submit($form,  &$form_state){
  module_load_include('inc', 'gzflower', 'gzflower.results');
  global $user;
  $flower_data = _gzflower_load_flower_data($user);

  //We set the flower_data to an empty array if this user hasn't taken any tests
  // And set the primary key to null so we know it is an insert
  if(!$flower_data){
    $flower_data = array();
    $primary_key = null; 
  }
  else{
    $primary_key = 'uid'; 
  }

  $results  = _gzflower_get_result_data();

  $quiz_num = $form_state['values']['quiz_num'];
  $rubric   = $results[$quiz_num -1];
  $answers  = $form_state['values']['questions'];
  
  switch($rubric['type']){
    case 'sum': list($color, $description) = _gzflower_sum_rubric($answers, $rubric);
      break;
    case 'most': list($color, $description) = _gzflower_most_rubric($answers, $rubric);
      break;
  }

  $flower_data[$quiz_num]['color'] = $color;
  $flower_data[$quiz_num]['description'] = $description;

  $record = array(
    'uid' => $user->uid,
    'data' => serialize($flower_data),
  );

  if($primary_key){  //inserting new value
    drupal_write_record('gzflower', $record, $primary_key); 
  }
  else{  //updating existing
    drupal_write_record('gzflower', $record); 
  }
  $form_state['redirect'] = 'user/' . $user->uid . '/flower/' . $quiz_num .'/result';
}

function _gzflower_sum_rubric($answers, $rubric){
  return $rubric['callback']($answers);
}


function _gzflower_most_rubric($answers, $rubric){
  $results = array_count_values($answers);
  asort($results);
  $sorted = array_reverse($results, true);

  //Reset the pointer to the first itme in the array
  reset($sorted);

  //Get the key, which is the winner
  $winner = key($sorted);

  $type_of_girl = $rubric['results'][strtoupper($winner)];
  return array($type_of_girl['color'], $type_of_girl['text']);
}

function _gzflower_load_flower_data($account){
  $data = db_query('SELECT data FROM {gzflower} WHERE uid=:uid', array(':uid'=>$account->uid))->fetchAssoc();
  if(!$data){
    return FALSE;
  }
  else{
    return unserialize($data['data']);
  }
}

